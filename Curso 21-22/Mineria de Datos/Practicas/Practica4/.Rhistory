plot(proteindata, main = "Datos sin escalar")
plot(proteindata.scaled, main = "Datos escalados")
proteindata.stacked <- stack(proteindata)
proteindata.scaled.stacked <- stack(proteindata.scaled)
p1 <- ggplot(
data = proteindata.stacked,
aes(
x = ind,
y = values,
color = ind
)
) +
geom_boxplot() +
labs(
title = "Datos sin escalar",
x = "Variables",
y = "Valores",
color = 'Variables'
)
p2 <- ggplot(
data = proteindata.scaled.stacked,
aes(
x = ind,
y = values,
color = ind
)
) +
geom_boxplot() +
labs(
title = "Datos escalados",
x = "Variables",
y = "Valores",
color = 'Variables'
)
grid.arrange(p1, p2, nrow=2)
proteindata.dist <- dist(proteindata.scaled, method = "euclidian")
par(mfrow = c(2, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "average")),
main = "average")
plot(
as.dendrogram(hclust(proteindata.dist, method = "ward.D")),
main ="ward.D")
plot(
as.dendrogram(hclust(proteindata.dist, method = "ward.D2")),
main = "ward.D2")
plot(
as.dendrogram(hclust(proteindata.dist, method = "single")),
main = "single")
par(mfrow = c(2, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "complete")),
main = "complete")
plot(
as.dendrogram(hclust(proteindata.dist, method = "mcquitty")),
main = "mcquitty")
plot(
as.dendrogram(hclust(proteindata.dist, method = "median")),
main = "median")
plot(
as.dendrogram(hclust(proteindata.dist, method = "centroid")),
main = "centroid")
proteindata.dist.manhattan <- dist(proteindata.scaled, method = "manhattan")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "average")),
main = "Distancia Euclídea (average)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "average")),
main ="Distancia Manhattan (average)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "ward.D")),
main = "Distancia Euclídea (ward.D)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "ward.D")),
main ="Distancia Manhattan (ward.D)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "ward.D2")),
main = "Distancia Euclídea (ward.D2)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "ward.D2")),
main ="Distancia Manhattan (ward.D2)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "single")),
main = "Distancia Euclídea (single)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "single")),
main ="Distancia Manhattan (single)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "complete")),
main = "Distancia Euclídea (complete)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "complete")),
main ="Distancia Manhattan (complete)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "mcquitty")),
main = "Distancia Euclídea (mcquitty)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "mcquitty")),
main ="Distancia Manhattan (mcquitty)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "median")),
main = "Distancia Euclídea (median)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "median")),
main ="Distancia Manhattan (median)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "centroid")),
main = "Distancia Euclídea (centroid)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "centroid")),
main ="Distancia Manhattan (centroid)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "average")),
main = "Distancia Euclídea (average)")
abline(h=4, col="red", lty=2)
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "average")),
main ="Distancia Manhattan (average)")
abline(h=10, col="red", lty=2)
proteindata.scaled.t <- data.frame(t(proteindata.scaled[-1]))
colnames(proteindata.scaled.t) <- row.names(proteindata.scaled)
# Mostramos el resultado por pantalla
proteindata.scaled.t
# Calculamos la matriz de distancias
proteindata.dist.t <- dist(proteindata.scaled.t, method = "euclidean")
# Ejecutamos el clustering
plot(
as.dendrogram(hclust(proteindata.dist.t, method = "average")),
main ="Distancia Manhattan (average)")
cor.pe <- cor(t(as.matrix(proteindata.scaled)), method = c("pearson"))
proteindata.dist.pearson <- as.dist(1 - cor.pe)
par(mfrow = c(2, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "average")),
main = "average")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "ward.D")),
main ="ward.D")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "ward.D2")),
main = "ward.D2")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "single")),
main = "single")
par(mfrow = c(2, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "complete")),
main = "complete")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "mcquitty")),
main = "mcquitty")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "median")),
main = "median")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "centroid")),
main = "centroid")
rm(list = ls())
knitr::opts_chunk$set(echo=TRUE)
setwd("c:/Users/Andres/Google Drive/USC/MaBD/Mineria de Datos/Practicas/Practica4/")
library(tidyverse)
library(MASS)
library(foreign)
library(car)
library(Hmisc)
library(VIM)
library(mice)
library(ggplot2)
library(reshape)
library(doParallel)
library(plyr)
library(caret)
library(gridExtra)
library(fastcluster)
proteindata <- read.delim("./data/proteindata.txt", row.names = 1)
str(proteindata)
apply(proteindata, 2, function(x){ sum(is.na(x)) })
proteindata.scaled <- as.data.frame(scale(proteindata))
plot(proteindata, main = "Datos sin escalar")
plot(proteindata.scaled, main = "Datos escalados")
proteindata.stacked <- stack(proteindata)
proteindata.scaled.stacked <- stack(proteindata.scaled)
p1 <- ggplot(
data = proteindata.stacked,
aes(
x = ind,
y = values,
color = ind
)
) +
geom_boxplot() +
labs(
title = "Datos sin escalar",
x = "Variables",
y = "Valores",
color = 'Variables'
)
p2 <- ggplot(
data = proteindata.scaled.stacked,
aes(
x = ind,
y = values,
color = ind
)
) +
geom_boxplot() +
labs(
title = "Datos escalados",
x = "Variables",
y = "Valores",
color = 'Variables'
)
grid.arrange(p1, p2, nrow=2)
proteindata.dist <- dist(proteindata.scaled, method = "euclidian")
par(mfrow = c(2, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "average")),
main = "average")
plot(
as.dendrogram(hclust(proteindata.dist, method = "ward.D")),
main ="ward.D")
plot(
as.dendrogram(hclust(proteindata.dist, method = "ward.D2")),
main = "ward.D2")
plot(
as.dendrogram(hclust(proteindata.dist, method = "single")),
main = "single")
par(mfrow = c(2, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "complete")),
main = "complete")
plot(
as.dendrogram(hclust(proteindata.dist, method = "mcquitty")),
main = "mcquitty")
plot(
as.dendrogram(hclust(proteindata.dist, method = "median")),
main = "median")
plot(
as.dendrogram(hclust(proteindata.dist, method = "centroid")),
main = "centroid")
proteindata.dist.manhattan <- dist(proteindata.scaled, method = "manhattan")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "average")),
main = "Distancia Euclídea (average)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "average")),
main ="Distancia Manhattan (average)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "ward.D")),
main = "Distancia Euclídea (ward.D)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "ward.D")),
main ="Distancia Manhattan (ward.D)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "ward.D2")),
main = "Distancia Euclídea (ward.D2)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "ward.D2")),
main ="Distancia Manhattan (ward.D2)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "single")),
main = "Distancia Euclídea (single)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "single")),
main ="Distancia Manhattan (single)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "complete")),
main = "Distancia Euclídea (complete)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "complete")),
main ="Distancia Manhattan (complete)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "mcquitty")),
main = "Distancia Euclídea (mcquitty)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "mcquitty")),
main ="Distancia Manhattan (mcquitty)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "median")),
main = "Distancia Euclídea (median)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "median")),
main ="Distancia Manhattan (median)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "centroid")),
main = "Distancia Euclídea (centroid)")
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "centroid")),
main ="Distancia Manhattan (centroid)")
par(mfrow = c(1, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist, method = "average")),
main = "Distancia Euclídea (average)")
abline(h=4, col="red", lty=2)
plot(
as.dendrogram(hclust(proteindata.dist.manhattan, method = "average")),
main ="Distancia Manhattan (average)")
abline(h=10, col="red", lty=2)
proteindata.scaled.t <- data.frame(t(proteindata.scaled[-1]))
colnames(proteindata.scaled.t) <- row.names(proteindata.scaled)
# Mostramos el resultado por pantalla
proteindata.scaled.t
# Calculamos la matriz de distancias
proteindata.dist.t <- dist(proteindata.scaled.t, method = "euclidean")
# Ejecutamos el clustering
plot(
as.dendrogram(hclust(proteindata.dist.t, method = "average")),
main ="Distancia Manhattan (average)")
cor.pe <- cor(t(as.matrix(proteindata.scaled)), method = c("pearson"))
proteindata.dist.pearson <- as.dist(1 - cor.pe)
par(mfrow = c(2, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "average")),
main = "average")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "ward.D")),
main ="ward.D")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "ward.D2")),
main = "ward.D2")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "single")),
main = "single")
par(mfrow = c(2, 2), mar = c(4, 2, 1, 1))
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "complete")),
main = "complete")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "mcquitty")),
main = "mcquitty")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "median")),
main = "median")
plot(
as.dendrogram(hclust(proteindata.dist.pearson, method = "centroid")),
main = "centroid")
heatmap(
as.matrix(proteindata.scaled),
Rowv = as.dendrogram(hclust(proteindata.dist.pearson, method = "average")),
cexRow = .6,
cexCol = .6
)
heatmap(
as.matrix(proteindata.scaled),
Rowv = as.dendrogram(hclust(proteindata.dist.pearson, method = "ward.D")),
cexRow = .6,
cexCol = .6
)
heatmap(
as.matrix(proteindata.scaled),
Rowv = as.dendrogram(hclust(proteindata.dist.pearson, method = "ward.D2")),
cexRow = .6,
cexCol = .6
)
heatmap(
as.matrix(proteindata.scaled),
Rowv = as.dendrogram(hclust(proteindata.dist.pearson, method = "single")),
cexRow = .6,
cexCol = .6
)
heatmap(
as.matrix(proteindata.scaled),
Rowv = as.dendrogram(hclust(proteindata.dist.pearson, method = "complete")),
cexRow = .6,
cexCol = .6
)
heatmap(
as.matrix(proteindata.scaled),
Rowv = as.dendrogram(hclust(proteindata.dist.pearson, method = "mcquitty")),
cexRow = .6,
cexCol = .6
)
heatmap(
as.matrix(proteindata.scaled),
Rowv = as.dendrogram(hclust(proteindata.dist.pearson, method = "median")),
cexRow = .6,
cexCol = .6
)
heatmap(
as.matrix(proteindata.scaled),
Rowv = as.dendrogram(hclust(proteindata.dist.pearson, method = "centroid")),
cexRow = .6,
cexCol = .6
)
library(tidyverse)
library(MASS)
library(foreign)
library(car)
library(Hmisc)
library(VIM)
library(mice)
library(ggplot2)
library(reshape)
library(doParallel)
library(plyr)
library(caret)
library(gridExtra)
library(fastcluster)
library(pvclust)
install.packages(pvclust)
install.package(pvclust)
install.packages(c("backports", "blob", "broom", "caret", "cli", "clipr", "colorspace", "commonmark", "cpp11", "crayon", "DBI", "DEoptimR", "desc", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "float", "foreach", "fs", "future", "generics", "glmnet", "glue", "gmp", "htmlTable", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "lme4", "lmtest", "magrittr", "maptools", "openssl", "parallelly", "pillar", "plyr", "PMCMRplus", "processx", "RColorBrewer", "Rcpp", "RcppEigen", "readr", "readxl", "recipes", "rlang", "rmarkdown", "robustbase", "rprojroot", "rvest", "sass", "stringi", "styler", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "xml2", "yaml"))
install.packages(c("backports", "blob", "broom", "caret", "cli", "clipr", "colorspace", "commonmark", "cpp11", "crayon", "DBI", "DEoptimR", "desc", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "float", "foreach", "fs", "future", "generics", "glmnet", "glue", "gmp", "htmlTable", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "lme4", "lmtest", "magrittr", "maptools", "openssl", "parallelly", "pillar", "plyr", "PMCMRplus", "processx", "RColorBrewer", "Rcpp", "RcppEigen", "readr", "readxl", "recipes", "rlang", "rmarkdown", "robustbase", "rprojroot", "rvest", "sass", "stringi", "styler", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "xml2", "yaml"))
install.packages(c("backports", "blob", "broom", "caret", "cli", "clipr", "colorspace", "commonmark", "cpp11", "crayon", "DBI", "DEoptimR", "desc", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "float", "foreach", "fs", "future", "generics", "glmnet", "glue", "gmp", "htmlTable", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "lme4", "lmtest", "magrittr", "maptools", "openssl", "parallelly", "pillar", "plyr", "PMCMRplus", "processx", "RColorBrewer", "Rcpp", "RcppEigen", "readr", "readxl", "recipes", "rlang", "rmarkdown", "robustbase", "rprojroot", "rvest", "sass", "stringi", "styler", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "xml2", "yaml"))
install.packages(c("backports", "blob", "broom", "caret", "cli", "clipr", "colorspace", "commonmark", "cpp11", "crayon", "DBI", "DEoptimR", "desc", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "float", "foreach", "fs", "future", "generics", "glmnet", "glue", "gmp", "htmlTable", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "lme4", "lmtest", "magrittr", "maptools", "openssl", "parallelly", "pillar", "plyr", "PMCMRplus", "processx", "RColorBrewer", "Rcpp", "RcppEigen", "readr", "readxl", "recipes", "rlang", "rmarkdown", "robustbase", "rprojroot", "rvest", "sass", "stringi", "styler", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "xml2", "yaml"))
install.packages(c("backports", "blob", "broom", "caret", "cli", "clipr", "colorspace", "commonmark", "cpp11", "crayon", "DBI", "DEoptimR", "desc", "digest", "dplyr", "dtplyr", "evaluate", "fansi", "float", "foreach", "fs", "future", "generics", "glmnet", "glue", "gmp", "htmlTable", "iterators", "jsonlite", "kernlab", "klaR", "knitr", "lme4", "lmtest", "magrittr", "maptools", "openssl", "parallelly", "pillar", "plyr", "PMCMRplus", "processx", "RColorBrewer", "Rcpp", "RcppEigen", "readr", "readxl", "recipes", "rlang", "rmarkdown", "robustbase", "rprojroot", "rvest", "sass", "stringi", "styler", "testthat", "tibble", "tidyr", "tidyselect", "tinytex", "tzdb", "uuid", "vctrs", "vroom", "waldo", "withr", "xfun", "xml2", "yaml"))
install.packages('pvclust')
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "glue", "magrittr", "rlang", "tibble", "vctrs", "xfun"))
library(pvclust)
knitr::opts_chunk$set(echo=TRUE)
library(tidyverse)
library(MASS)
library(foreign)
library(car)
library(Hmisc)
library(VIM)
library(mice)
library(ggplot2)
library(reshape)
library(doParallel)
library(plyr)
library(caret)
library(tidyverse)
library(MASS)
library(foreign)
library(car)
library(Hmisc)
library(VIM)
library(mice)
library(ggplot2)
library(reshape)
library(doParallel)
library(plyr)
library(caret)
library(tidyverse)
library(MASS)
library(foreign)
library(car)
library(Hmisc)
library(VIM)
library(mice)
library(ggplot2)
library(reshape)
library(doParallel)
library(plyr)
library(generics)
library(tidyverse)
library(MASS)
library(foreign)
library(car)
library(Hmisc)
library(VIM)
library(mice)
library(ggplot2)
library(reshape)
library(doParallel)
library(plyr)
library(caret)
install.packages("xfun")
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "glue", "magrittr", "rlang", "tibble", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "glue", "magrittr", "rlang", "tibble", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "glue", "magrittr", "rlang", "tibble", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "glue", "magrittr", "rlang", "tibble", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "glue", "magrittr", "rlang", "tibble", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "glue", "magrittr", "rlang", "tibble", "vctrs"))
install.packages("vctrs")
install.packages("vctrs")
knitr::opts_chunk$set(echo=TRUE)
library(tidyverse)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
detach("package:graphics", unload = TRUE)
detach("package:grDevices", unload = TRUE)
detach("package:datasets", unload = TRUE)
detach("package:methods", unload = TRUE)
detach("package:stats", unload = TRUE)
detach("package:utils", unload = TRUE)
detach("package:base", unload = TRUE)
install.packages("rlang")
install.packages("rlang")
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
.libPaths()
