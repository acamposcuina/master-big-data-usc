library(tidyverse) # General-purpose data wrangling
setwd("c:/Users/Andres/Google Drive/USC/MaBD/Aprendizaje Estadistico/Practicas/Practica1")
data <- read_tsv("data/amazon.tsv")
data <- as.data.frame(data)
head(data, n = 5)
n_reviews <- nrow(data)
n_reviews
reviews_by_year <- c(str_split_fixed(data$date, '-', n = 2)[, 1])
reviews_by_year <- strtoi(reviews_by_year, base = 0L)
hist(reviews_by_year,
main = "Número de comentarios por año",
xlab = "Año",
ylab = "Número de comentarios"
)
rating_avg <- mean(data$rating)
ratings <- data[c("date", "rating")]
ratings <-
mutate(ratings, date = strtoi(str_split_fixed(date, '-', n = 2)[, 1], base = 0L))
rating_avg_by_year <-
ratings %>% group_by(date) %>% summarise(mean = mean(rating))
plot(
rating_avg_by_year,
type = "h",
lwd = "8",
main = "Valoración media por año",
xlab = "Año",
ylab = "Valoración media",
ylim = c(3, 5)
)
# Extraemos los comentarios a una lista
reviews <- data['review']
# Para cada comentario obtenemos el número de caracteres y lo guardamos en una nueva lista
n_characters_by_review <- c()
for (review in reviews) {
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
hist(
n_characters_by_review,
breaks=200,
xlim=c(0,5000),
main="Número de caracteres por comentario",
xlab = "Nº de caracteres",
ylab = "Frecuencia",
)
hist(
n_characters_by_review,
breaks=200,
xlim=c(0,1000),
main="Número de caracteres por comentario (hasta 1000 caracteres)",
xlab = "Nº de caracteres",
ylab = "Frecuencia",
)
library(tidyverse) # General-purpose data wrangling
n_char <- nchar(review, type="chars")
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
# La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
reviews_by_ratings <- split(reviews , f = reviews$rating )
# Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
for (reviews_by_rating in reviews_by_ratings) {
n_characters_by_review <- c()
for (row in 1:nrow(reviews_by_rating)) {
review <- reviews_by_rating[row, "review"]
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
rating <- reviews_by_rating[1, "rating"]
title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
boxplot(n_characters_by_review, main=title)
}
library("scatterplot3d") # Para representrar gráficamente
library(tidyverse) # General-purpose data wrangling
library(lattice)
x <- seq(-10, 10, length = 30)
y <- x
f <- function(x, y) {0.5 * (x^2 + y^2)}
z <- outer(x, y, f)
# Representación gráfica
persp(x, y, z, col = 'red')
# Gráfico de contornos
contour(x, y, z)
# Uso de la librería lattice
g <- expand.grid(x = -10:10, y = -10:10)
g$z <- 0.5 * (g$x^2 + g$y^2)
wireframe(z ~ x * y, data = g, drape = TRUE)
levelplot(z ~ x * y, g, contour = TRUE)
library("scatterplot3d") # Para representrar gráficamente
library(tidyverse) # General-purpose data wrangling
library(lattice)
x <- seq(-10, 10, length = 30)
y <- x
f <- function(x, y) {0.5 * (x^2 + y^2)}
z <- outer(x, y, f)
# Representación gráfica
persp(x, y, z, col = 'red')
# Gráfico de contornos
contour(x, y, z)
# Uso de la librería lattice
g <- expand.grid(x = -10:10, y = -10:10)
g$z <- 0.5 * (g$x^2 + g$y^2)
wireframe(z ~ x * y, data = g, drape = TRUE)
levelplot(z ~ x * y, g, contour = TRUE)
myGradientDescentFixedStep <- function(gamma, threshold, max_iter) {
# Definimos el punto inicial
x <- gamma
y <- 1
converged = F
iterations = 0
# Por ahora ejecutamos con un paso fijo
t <- 0.001
while(converged == F) {
# Evaluamos el gradiente de la función objetivo en x^(k-1)
x_gradient <- x
y_gradient <- gamma*y
# Actualizamos el punto x^k
x_new <- x - t * x_gradient
y_new <- y - t * y_gradient
x <- x_new
y <- y_new
# Obtenemos el criterio de parada
stopping_criterion = 0.5 * (x^2 + (gamma*y)^2)
# Comprobamos si se cumple el criterio de parada
if(stopping_criterion <= threshold) {
converged = T
return(paste("Optimal x:", x, "; Optimal y:", y, "; Converged"))
}
# Comprobamos si se han ejecutado el número máximo de iteraciones
iterations = iterations + 1
if(iterations > max_iter) {
converged = T
return(paste("Optimal x:", x, "; Optimal y:", y, "; Not Converged"))
}
}
}
myGradientDescentFixedStep(1, 0.001, 2500000)
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
# La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
reviews_by_ratings <- split(reviews , f = reviews$rating )
# Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
for (reviews_by_rating in reviews_by_ratings) {
n_characters_by_review <- c()
for (row in 1:nrow(reviews_by_rating)) {
# Obtenemos el comentario de esta fila
review <- reviews_by_rating[row, "review"]
# Calculo el número de caracteres de este comentario
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
rating <- reviews_by_rating[1, "rating"]
title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
boxplot(n_characters_by_review, main=title, add=TRUE, col=rating)
}
boxplot(n_characters_by_review, main=title)
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
# La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
reviews_by_ratings <- split(reviews , f = reviews$rating )
# Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
for (reviews_by_rating in reviews_by_ratings) {
n_characters_by_review <- c()
for (row in 1:nrow(reviews_by_rating)) {
# Obtenemos el comentario de esta fila
review <- reviews_by_rating[row, "review"]
# Calculo el número de caracteres de este comentario
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
rating <- reviews_by_rating[1, "rating"]
title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
if(rating > 1){
boxplot(n_characters_by_review, main=title, add=TRUE, col=rating)
} else {
boxplot(n_characters_by_review, main=title)
}
}
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
# La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
reviews_by_ratings <- split(reviews , f = reviews$rating )
# Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
for (reviews_by_rating in reviews_by_ratings) {
n_characters_by_review <- c()
for (row in 1:nrow(reviews_by_rating)) {
# Obtenemos el comentario de esta fila
review <- reviews_by_rating[row, "review"]
# Calculo el número de caracteres de este comentario
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
rating <- reviews_by_rating[1, "rating"]
title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
if(rating > 1){
boxplot(n_characters_by_review, main=title, add=TRUE, col=rating, type=l)
} else {
boxplot(n_characters_by_review, main=title, type=l)
}
}
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
# La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
reviews_by_ratings <- split(reviews , f = reviews$rating )
# Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
for (reviews_by_rating in reviews_by_ratings) {
n_characters_by_review <- c()
for (row in 1:nrow(reviews_by_rating)) {
# Obtenemos el comentario de esta fila
review <- reviews_by_rating[row, "review"]
# Calculo el número de caracteres de este comentario
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
rating <- reviews_by_rating[1, "rating"]
title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
if(rating > 1){
boxplot(n_characters_by_review, main=title, add=TRUE, col=rating, type="l")
} else {
boxplot(n_characters_by_review, main=title, type="l")
}
}
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
data <- data.frame()
# La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
reviews_by_ratings <- split(reviews , f = reviews$rating )
# Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
for (reviews_by_rating in reviews_by_ratings) {
n_characters_by_review <- c()
for (row in 1:nrow(reviews_by_rating)) {
# Obtenemos el comentario de esta fila
review <- reviews_by_rating[row, "review"]
# Calculo el número de caracteres de este comentario
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
data[reviews_by_rating[1, "rating"]] = n_characters_by_review
# title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
}
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
library(tidyverse) # General-purpose data wrangling
setwd("c:/Users/Andres/Google Drive/USC/MaBD/Aprendizaje Estadistico/Practicas/Practica1")
data <- read_tsv("data/amazon.tsv")
data <- as.data.frame(data)
head(data, n = 5)
n_reviews <- nrow(data)
n_reviews
reviews_by_year <- c(str_split_fixed(data$date, '-', n = 2)[, 1])
reviews_by_year <- strtoi(reviews_by_year, base = 0L)
hist(reviews_by_year,
main = "Número de comentarios por año",
xlab = "Año",
ylab = "Número de comentarios"
)
rating_avg <- mean(data$rating)
ratings <- data[c("date", "rating")]
ratings <-
mutate(ratings, date = strtoi(str_split_fixed(date, '-', n = 2)[, 1], base = 0L))
rating_avg_by_year <-
ratings %>% group_by(date) %>% summarise(mean = mean(rating))
plot(
rating_avg_by_year,
type = "h",
lwd = "8",
main = "Valoración media por año",
xlab = "Año",
ylab = "Valoración media",
ylim = c(3, 5)
)
# Extraemos los comentarios a una lista
reviews <- data['review']
# Para cada comentario obtenemos el número de caracteres y lo guardamos en una nueva lista
n_characters_by_review <- c()
for (review in reviews) {
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
hist(
n_characters_by_review,
breaks=200,
xlim=c(0,5000),
main="Número de caracteres por comentario",
xlab = "Nº de caracteres",
ylab = "Frecuencia",
)
hist(
n_characters_by_review,
breaks=200,
xlim=c(0,1000),
main="Número de caracteres por comentario (hasta 1000 caracteres)",
xlab = "Nº de caracteres",
ylab = "Frecuencia",
)
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
# data <- data.frame()
# La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
reviews_by_ratings <- split(reviews , f = reviews$rating )
# Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
for (reviews_by_rating in reviews_by_ratings) {
n_characters_by_review <- c()
for (row in 1:nrow(reviews_by_rating)) {
# Obtenemos el comentario de esta fila
review <- reviews_by_rating[row, "review"]
# Calculo el número de caracteres de este comentario
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
# data[reviews_by_rating[1, "rating"]] = n_characters_by_review
# title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
}
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
df <- data.frame(matrix(ncol = 0, nrow = 0))
# La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
reviews_by_ratings <- split(reviews , f = reviews$rating )
# Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
for (reviews_by_rating in reviews_by_ratings) {
n_characters_by_review <- c()
for (row in 1:nrow(reviews_by_rating)) {
# Obtenemos el comentario de esta fila
review <- reviews_by_rating[row, "review"]
# Calculo el número de caracteres de este comentario
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
# data[reviews_by_rating[1, "rating"]] = n_characters_by_review
# title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
}
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
data_aux <- data.frame(matrix(ncol = 0, nrow = 0))
# La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
reviews_by_ratings <- split(reviews , f = reviews$rating )
# Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
for (reviews_by_rating in reviews_by_ratings) {
n_characters_by_review <- c()
for (row in 1:nrow(reviews_by_rating)) {
# Obtenemos el comentario de esta fila
review <- reviews_by_rating[row, "review"]
# Calculo el número de caracteres de este comentario
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
data_aux[reviews_by_rating[1, "rating"]] = n_characters_by_review
# title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
}
rating_avg_by_year <-
ratings %>% group_by(date) %>% boxplot(rating_avg_by_year)
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
rating_avg_by_year <-
ratings %>% group_by(date) %>% boxplot(rating_avg_by_year)
# # La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
# reviews_by_ratings <- split(reviews , f = reviews$rating )
# # Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
# for (reviews_by_rating in reviews_by_ratings) {
#   n_characters_by_review <- c()
#
#   for (row in 1:nrow(reviews_by_rating)) {
#     # Obtenemos el comentario de esta fila
#     review <- reviews_by_rating[row, "review"]
#
#     # Calculo el número de caracteres de este comentario
#     n_char <- nchar(review, type="chars")
#     n_characters_by_review <- append(n_characters_by_review, n_char)
#   }
#
#   data_aux[reviews_by_rating[1, "rating"]] = n_characters_by_review
#   # title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
#
# }
# En primer lugar agrupamos los comentarios en función del rating
reviews <- data[c("rating", "review")]
data_aux <- data.frame(A = rnorm(1000),
B = runif(1000),
C = rpois(1000, 3))
boxplot(data_aux)
# # La función `split` devuelve una lista con los comentarios de cada rating (del 1 al 5)
# reviews_by_ratings <- split(reviews , f = reviews$rating )
# # Iteramos sobre la lista anterior y representamos el boxplot necesario en función del rating
# for (reviews_by_rating in reviews_by_ratings) {
#   n_characters_by_review <- c()
#
#   for (row in 1:nrow(reviews_by_rating)) {
#     # Obtenemos el comentario de esta fila
#     review <- reviews_by_rating[row, "review"]
#
#     # Calculo el número de caracteres de este comentario
#     n_char <- nchar(review, type="chars")
#     n_characters_by_review <- append(n_characters_by_review, n_char)
#   }
#
#   data_aux[reviews_by_rating[1, "rating"]] = n_characters_by_review
#   # title <- paste("Número de caracteres por comentario | Valoración: ", rating, sep = " ")
#
# }
library(tidyverse) # General-purpose data wrangling
setwd("c:/Users/Andres/Google Drive/USC/MaBD/Aprendizaje Estadistico/Practicas/Practica1")
data <- read_tsv("data/amazon.tsv")
data <- as.data.frame(data)
head(data, n = 5)
n_reviews <- nrow(data)
n_reviews
reviews_by_year <- c(str_split_fixed(data$date, '-', n = 2)[, 1])
reviews_by_year <- strtoi(reviews_by_year, base = 0L)
hist(reviews_by_year,
main = "Número de comentarios por año",
xlab = "Año",
ylab = "Número de comentarios"
)
rating_avg <- mean(data$rating)
ratings <- data[c("date", "rating")]
ratings <-
mutate(ratings, date = strtoi(str_split_fixed(date, '-', n = 2)[, 1], base = 0L))
rating_avg_by_year <-
ratings %>% group_by(date) %>% summarise(mean = mean(rating))
plot(
rating_avg_by_year,
type = "h",
lwd = "8",
main = "Valoración media por año",
xlab = "Año",
ylab = "Valoración media",
ylim = c(3, 5)
)
# Extraemos los comentarios a una lista
reviews <- data['review']
# Para cada comentario obtenemos el número de caracteres y lo guardamos en una nueva lista
n_characters_by_review <- c()
for (review in reviews) {
n_char <- nchar(review, type="chars")
n_characters_by_review <- append(n_characters_by_review, n_char)
}
hist(
n_characters_by_review,
breaks=200,
xlim=c(0,5000),
main="Número de caracteres por comentario",
xlab = "Nº de caracteres",
ylab = "Frecuencia",
)
hist(
n_characters_by_review,
breaks=200,
xlim=c(0,1000),
main="Número de caracteres por comentario (hasta 1000 caracteres)",
xlab = "Nº de caracteres",
ylab = "Frecuencia",
)
